import streamlit as st
import matplotlib.pyplot as plt
import tempfile
import os
import pandas as pd

from __init__ import setup_project_paths
setup_project_paths()

from core.data.loader import load_edf, load_csv
from core.data.manager import DataManager

st.title("üìÇ –î–∞–Ω–Ω—ã–µ")

st.sidebar.header("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≥—Ä–∞—Ñ–∏–∫–∞")

amplitude_scale = st.sidebar.slider(
    "–ú–∞—Å—à—Ç–∞–± –∞–º–ø–ª–∏—Ç—É–¥—ã", 
    min_value=0.5, 
    max_value=10000.0, 
    value=10.0, 
    step=0.000001,
    format="%.1f"
)

time_samples = st.sidebar.slider(
    "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç—Å—á—ë—Ç–æ–≤", 
    min_value=100, 
    max_value=50000, 
    value=5000, 
    step=100
)

vertical_spacing = st.sidebar.slider(
    "–í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É –∫–∞–Ω–∞–ª–∞–º–∏", 
    min_value=0.5, 
    max_value=1000.0, 
    value=10.0, 
    step=0.00001,
    format="%.1f"
)

channels_to_show = st.sidebar.slider(
    "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–Ω–∞–ª–æ–≤", 
    min_value=1, 
    max_value=64, 
    value=32, 
    step=1
)

uploaded_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ EEG —Ñ–∞–π–ª (.edf –∏–ª–∏ .csv)", type=["edf", "csv"])

if uploaded_file is not None:
    file_type = uploaded_file.name.split(".")[-1]
    
    with tempfile.NamedTemporaryFile(delete=False, suffix=f'.{file_type}') as tmp_file:
        tmp_file.write(uploaded_file.getvalue())
        tmp_file_path = tmp_file.name

    try:
        if file_type == "edf":
            sample = load_edf(tmp_file_path)
        elif file_type == "csv":
            df_temp = pd.read_csv(tmp_file_path, nrows=1)
            has_labels_flag = 'label' in [col.lower() for col in df_temp.columns]
            
            sample = load_csv(tmp_file_path, sfreq=256, has_labels=has_labels_flag)
        else:
            st.error("–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç")
            st.stop()
    finally:
        os.unlink(tmp_file_path)

    st.success(f"–§–∞–π–ª {uploaded_file.name} —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!")
    st.write(f"–ß–∞—Å—Ç–æ—Ç–∞ –¥–∏—Å–∫—Ä–µ—Ç–∏–∑–∞—Ü–∏–∏: {sample.sfreq} Hz")
    st.write(f"–ö–∞–Ω–∞–ª—ã: {sample.ch_names[:5]}... ({len(sample.ch_names)} –≤—Å–µ–≥–æ)")
    st.write(f"–†–∞–∑–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö: {sample.data.shape}")

    st.write(f"–î–∏–∞–ø–∞–∑–æ–Ω –∑–Ω–∞—á–µ–Ω–∏–π –≤ –ø–µ—Ä–≤–æ–º –∫–∞–Ω–∞–ª–µ: [{sample.data[0].min():.6f}, {sample.data[0].max():.6f}]")
    
    fig, ax = plt.subplots(figsize=(12, 8))
    
    time_limit = min(time_samples, sample.data.shape[1])
    channel_limit = min(channels_to_show, sample.data.shape[0])
    
    for i in range(channel_limit):
        data_segment = sample.data[i][:time_limit] * amplitude_scale
        ax.plot(data_segment + i * vertical_spacing, linewidth=0.8)
    
    ax.set_xlabel('–í—Ä–µ–º—è (–æ—Ç—Å—á—ë—Ç—ã)')
    ax.set_ylabel('–ê–º–ø–ª–∏—Ç—É–¥–∞ (—É—Å–ª–æ–≤–Ω—ã–µ –µ–¥–∏–Ω–∏—Ü—ã)')
    ax.set_title(f'EEG —Å–∏–≥–Ω–∞–ª—ã (–º–∞—Å—à—Ç–∞–±: {amplitude_scale}x, –∫–∞–Ω–∞–ª—ã: {channel_limit}, –æ—Ç—Å—á—ë—Ç—ã: {time_limit})')
    
    st.pyplot(fig)